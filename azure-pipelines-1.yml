# Docker
- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'devops-aks-dev'
    namespace: 'dev'
    command: 'apply'
    useConfigurationFile: true
    configuration: '$(Build.SourcesDirectory)/sprint/Dev-Image/Dockerfile.yml'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: BuildDev
  displayName: Build-dev image
  jobs:
  - job: Build
    displayName: Build-dev
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'hjregistry0'
        repository: 'sprintacrfinaldev'
        command: 'BuildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/sprint/Dev-Image/Dockerfile.yml'
        tags: |
          $(tag)
    - task: Docker@2
      inputs:
        containerRegistry: 'hjregistry0'
        repository: 'sprintacrfinaldev'
        command: 'BuildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/sprint/Dev-Image/Dockerfile.yml'
        tags:  'latest'
- stage: BuildProd
  displayName: Build-prod image
  jobs:
  - job: Build
    displayName: Build-prod
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'hjregistry0'
        repository: 'sprintacrfinalprod'
        command: 'BuildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/sprint/Prod-Image/Dockerfile.yml'
        tags: |
          $(tag)
    - task: Docker@2
      inputs:
        containerRegistry: 'hjregistry0'
        repository: 'sprintacrfinaldev'
        command: 'BuildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/sprint/Dev-Image/Dockerfile.yml'
        tags:  'latest'